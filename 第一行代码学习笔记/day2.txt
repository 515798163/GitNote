1.Android程序的设计讲究逻辑和视图分离，最好每一个活动能对应一个布局。
2.创建布局
	android:id是给当前的元素定义一个唯一标识符，之后可以在代码中对这个元素进行操作
		在xml中引用一个id：@id/id_name
		在xml中定义一个id：@+id/id_name
	android:layout_width指定当前元素的宽度	android:layout_width="match_parent",使用match_parent表示让当前元素和父元素一样宽
	android:layout_height指定了当前元素的高度
	android:layout_height="wrap_content"表示当前元素的高度只要能刚好包含里面的内容就行。
	android:text指定了元素中显示的文字内容
3.在活动中加载布局
	setContentView()方法来给当前活动加载一个布局，在setContentView()方法中，一般会传入一个布局文件的id。项目中添加的任何资源都会在R文件中生成一个相应地资源id。
	
4.在AndroidManifest文件中注册
	所有的活动都要在AndroidManifest中注册才能生效
	活动的注册声明要放在<application>标签内，通过<activity>标签对活动进行注册。在<acativity>标签中使用android:name来指定具体注册哪一个活动。.FirstActivity的意思是com.example.activitytest.FirstActivity的缩写。由于在最外层的<manifest>标签中已经通过package属性指定了程序的包名是com.example.acativity,因此在注册活动时这一部分就可以省略了
	不过，仅仅是注册了活动，程序仍然是不能运行的，因为还没有为程序配置主活动，也就是说程序运行起来时，不知道首先启动哪个活动。
	
	配置主活动就是在<activity>标签内部加入<intent-filter>标签，并在标签里添加<action android:name="android.intent.action.MAIN"/>和<category android:name="android.intent.category.LAUNCHER"/>这两句声明就可以了
	另外，还可以使用android:label指定活动中标题栏的内容。给主活动指定的label不仅会成为标题栏的内容，还会成为启动器Launcher中应用程序显示的名称。
	如果应用程序中没有声明任何一个活动作为主活动，这个程序仍然可以正常安装。只是无法在启动器中看到或打开这个程序。这种程序一般作为第三方服务供其他应用在内部进行调用的，如支付宝的快捷支付。

5.在活动中使用Toast
	①通过findViewById()方法获取到在布局文件中中定义的元素，返回的是一个View对象，我们需要向下转型将它转成Button对象。
	②得到按钮的实例后，我们通过调用setOnClickListener()方法为按钮注册一个监听器，点击按钮时就会执行监听器中的onClick()方法。
	③Toast的功能编写到onClick()方法中。Toast通过静态方法makeText()创建出一个Toast对象，然后调用show()方法将Toast显示出来。makeText()方法需要传递三个参数。第一个参数是Context，也就是Toast要求的上下文（Context是一个抽象类，主要实现了Context的类是Activity、Service、Application）。第二个参数是Toast显示的文本内容。第三个参数是Toast显示的时长，有两个内置常量可以选择Toast.LENGTH_SHORT和Toast.LENGTH_LONG。

6.在活动中使用Menu
	注意：Menu resourse file只能在menu文件夹下创建，否则menu标签报错Cannot find the declaration of element 'menu'
	<item>标签就是用来创建具体的一个菜单项，然后通过android:id给这个菜单项指定一个唯一的标识符，通过android:title给这个菜单项指定一个名称
	
	在FirstActivity类中重写onCreateOptionMenu()方法（ctrl+o）返回true表示允许创建的菜单显示出来，如果返回了false，创建的菜单将无法显示。
	通过getMenuInflater()可以得到MenuInflater对象，再调用他的inflate()方法就可以给当前活动创建菜单了。inflate()方法接受两个参数，第一个参数用于指定我们通过哪一个资源文件来创建菜单，这里传入R.menu.main。第二个参数用于指定我们的菜单项将添加到哪一个Menu对象当中。
	
	还要定义菜单响应时间。在FirstActivity中重写onOptionItemSelected()方法。通过调用item.getItemId()来判断我们点击的是哪一个item，然后给每个菜单项加入自己的逻辑处理

7.销毁一个活动
	方法①按一下Back键就可以销毁当前活动
	方法②通过代码销毁。Activity类提供了一个finish()方法，在活动中调用一下这个方法就可以销毁当前活动了。